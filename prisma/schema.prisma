// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model User {
  id            String    @id @default(uuid()) @db.Uuid
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  Ad            Ad[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Ad {
  id        String       @id @default(uuid()) @db.Uuid
  user      User         @relation(fields: [userId], references: [id])
  titles    AdTitle[]
  copy      AdCopy[]
  creatives AdCreative[]
  userId    String       @db.Uuid
}

model AdCopy {
  id      String  @id @default(uuid()) @db.Uuid
  email   String
  content String  @default("")
  Ad      Ad?     @relation(fields: [adId], references: [id])
  adId    String? @db.Uuid
}

model AdCreative {
  id      String  @id @default(uuid()) @db.Uuid
  email   String
  content String  @default("")
  Ad      Ad?     @relation(fields: [adId], references: [id])
  adId    String? @db.Uuid
}

model AdTitle {
  id          String  @id @default(uuid()) @db.Uuid
  email       String
  preHeadline String  @default("")
  headline    String  @default("")
  subHeadline String  @default("")
  Ad          Ad?     @relation(fields: [adId], references: [id])
  adId        String? @db.Uuid
}
