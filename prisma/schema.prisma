generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id            String    @id @default(uuid()) @db.Uuid
  authId        String?
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Context {
  id      String    @id @default(uuid()) @db.Uuid
  email   String
  name    String
  data    String
  options Json?
  AdTitle AdTitle[]
  AdCopy  AdCopy[]
}

model AdCopy {
  id        String  @id @default(uuid()) @db.Uuid
  email     String
  context   Context @relation(fields: [contextId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  title     AdTitle @relation(fields: [adTitleId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  content   String  @default("")
  adTitleId String  @db.Uuid
  contextId String  @db.Uuid
}

model AdCreative {
  id      String @id @default(uuid()) @db.Uuid
  email   String
  content String @default("")
}

model AdTitle {
  id          String   @id @default(uuid()) @db.Uuid
  email       String
  context     Context  @relation(fields: [contextId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  preHeadline String   @default("")
  headline    String   @default("")
  subHeadline String   @default("")
  AdCopy      AdCopy[]
  contextId   String   @db.Uuid
}
